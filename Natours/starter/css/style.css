/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* basic reset */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

/* root font size */
html {
  /* font-size: 10px; makes it easier to calculate rems down the line */
  font-size: 62.5%; /* makes it easier to calculate rems down the line */
}

body {
  box-sizing: border-box;
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777777;
  padding: 3rem;
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgba(40, 180, 133, 0.8)
    ),
    url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%); /* clock-wise */
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  /* align top left corner of block at the center of nearest relative parent element */
  top: 40%;
  left: 50%;
  /* translate block element negatively by 50% of its size, effectively centering about its actual centroid */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: white;
  text-transform: uppercase;

  /* hide backface while animating */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  /* animation-delay: 1s; */
  /* animation-iteration-count: 3; */
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;

  /* short-hand */
  animation: moveInRight 1s ease-out;
  /* animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-in; */
}

/* browsers only optimized for opacity and transform animation only */
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  80% {
    transform: translateX(-1rem);
  }

  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  80% {
    transform: translateY(-1rem);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn:link,
.btn:visited {
  font-size: 1.6rem;
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem; /* top/bottom leftright */
  display: inline-block;
  border-radius: 10rem;
  transition: all 0.2s; /* affects transforms on hover & active */
  position: relative;
}

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgbfa(0, 0, 0, 0.2); /* offset x, offset y, blur */
}

.btn:active {
  transform: translateY(-1px); /* relative to "resting state" */
  box-shadow: 0 0.5rem 1rem rgbfa(0, 0, 0, 0.2); /* offset x, offset y, blur */
}

.btn::after {
  /* must have content, even if is just a blank line */
  content: "";
  /* also must have a display property? here we use the same display type as actual element */
  display: inline-block;
  /* height and width are relative to actual element */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  /* position exacly behind the actual element */
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn--white {
  background-color: white;
  color: #777;
}

.btn--white::after {
  background-color: white;
  /* color: #777; */
}

.btn--animated {
  animation: moveInBottom 0.5s ease-in 0.75s;
  animation-fill-mode: backwards;
}
